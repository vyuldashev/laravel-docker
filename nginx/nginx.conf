user nginx;
worker_processes  1;

load_module modules/ngx_http_perl_module.so;

env FPM_ADDRESS;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;

    # no nginx version exposure.
    server_tokens off;

    # Default type when none detected
    default_type    application/octet-stream;

    # Log format configuration
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /dev/stdout  main;
    error_log   /dev/stderr;

    # Max Upload Size
    client_max_body_size    1024M;

    # Send the client a "request timed out" if the body is not loaded by this time.
    client_body_timeout 10;

    # If the client stops reading data, free up the stale client connection after this much time.
    send_timeout 2;

    # Handle file descriptors at kernel level
    sendfile            on;

    # Causes nginx to attempt to send its HTTP response head in one packet,  instead of using partial frames.
    tcp_nopush on;

    gzip on;
    gzip_static on;

    perl_set $fpm_address 'sub { return $ENV{"FPM_ADDRESS"}; }';

    resolver 127.0.0.11 ipv6=off;

    server {
        listen $ENV{"NGINX_PORT"} default_server;

        root /var/www/app/public;
        index index.php index.html index.htm;

        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        error_page 404 /index.php;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            try_files $uri /index.php =404;
            fastcgi_pass $fpm_address;
            fastcgi_index index.php;
            fastcgi_hide_header X-Powered-By;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            include fastcgi_params;
        }
    }
}
