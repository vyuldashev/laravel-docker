worker_processes  1;
daemon off;
user root;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;

    # default fastcgi settings.
    fastcgi_buffers             16 16k;
    fastcgi_buffer_size         32k;
    fastcgi_read_timeout        300;
    #proxy_buffer_size           128k;
    #proxy_buffers               4 256k;
    #proxy_busy_buffers_size     256k;

    # no nginx version exposure.
    server_tokens off;

    # Default type when none detected
    default_type    application/octet-stream;

   # Max Upload Size
    client_max_body_size    1024M;

    # Log format configuration
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Access log file
    access_log  /dev/stdout  main;
    error_log   /dev/stderr;

    # Handle file descriptors at kernel level
    sendfile            on;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Timeout of keepalive
    keepalive_timeout  65;
    keepalive_requests 100000;

    gzip on;
    gzip_static on;

    error_log /dev/stdout;

    server {
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;

        root /var/www/app/public;
        index index.php index.html index.htm;

        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        error_page 404 /index.php;

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        location ~ \.php$ {
            try_files $uri /index.php =404;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_hide_header X-Powered-By;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            include fastcgi_params;
        }
    }
}
